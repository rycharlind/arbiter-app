// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"policy","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"exchangeAmt","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"receiver1","type":"address"},{"name":"receiver2","type":"address"},{"name":"receiver3","type":"address"},{"name":"policyNumber","type":"string"},{"name":"faceamount","type":"uint256"},{"name":"retentionAmount","type":"uint256"}],"name":"sendCoin","outputs":[{"name":"sufficient","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"policy","type":"string"},{"indexed":false,"name":"amount","type":"uint256"},{"indexed":false,"name":"amountreciever1","type":"uint256"},{"indexed":false,"name":"amountreceiver2","type":"uint256"},{"indexed":false,"name":"amountreceiver3","type":"uint256"}],"name":"LogEvent","type":"event"}],
    binary: "6060604052600160a060020a0332166000908152602081905260409020620f42409055610547806100306000396000f3606060405260e060020a60003504630505c8c9811461003c578063167f24361461009657806344b23477146100ae578063f8b2cb4f1461018a575b005b6101b060028054602060018216156101000260001901909116829004601f8101829004909102608090810160405260608281529291908282801561025d5780601f106102325761010080835404028352916020019161025d565b6101a660043560016020526000908152604090205481565b60806020606435600481810135601f81018490049093028401604052606083815261021e9482359460248035956044359594608494909392909101919081908382808284375094965050933593505060a435915050808203600355825160028054600082815292602060001961010060018516150201909216839004601f908101929092047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101926080908390106102b057805160ff19168380011785555b506102e09291505b8082111561032157848155600101610177565b600160a060020a03600435166000908152602081905260409020545b6060908152602090f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b604080519115158252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161024057829003601f168201915b505050505081565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b5050965050505050505060405180910390a15060015b9695505050505050565b8280016001018555821561016f579182015b8281111561016f5782518260005055916020019190600101906102c2565b505060035481901180156102f957506003546207a12090105b15610325576003805460028104600455600a9181029190910460059081559004600655610390565b5090565b6003546207a12090108015906103415750600354620f42409011155b15610369576003805460028104600455600a9181029190910460059081559004600655610390565b600354620f4240901115610390576003546005600282028190046004819055815590046006555b6005546004546006549084019091010183146103ab576102a6565b33600160a060020a0390811680835260016020908152604080852086905560048054858d1680885283882091909155600580548d8816808a52858a209190915560068054988e16808b52868b2099909955878a52958990528489208a90559254918852838820805490920190915554908652818620805490910190559054928452808420805490930190925590518290849082818181858883f15050600454604051600160a060020a038c16945090915082818181858883f15050600554604051600160a060020a038b16945090915082818181858883f15050600654604051600160a060020a038a16945090915082818181858883f150506003546004546005546006546040805160208101869052908101849052808c018390526080810182905260a08082526002805460018116156101000260001901168190049183018290527f24e86fefee4e56ec46d36facf3623eb2c3001f0c9602f50a39d0ce6a701a17fc99509750949550929391929091819060c0820190889080156102905780601f106102655761010080835404028352916020019161029056",
    unlinked_binary: "6060604052600160a060020a0332166000908152602081905260409020620f42409055610547806100306000396000f3606060405260e060020a60003504630505c8c9811461003c578063167f24361461009657806344b23477146100ae578063f8b2cb4f1461018a575b005b6101b060028054602060018216156101000260001901909116829004601f8101829004909102608090810160405260608281529291908282801561025d5780601f106102325761010080835404028352916020019161025d565b6101a660043560016020526000908152604090205481565b60806020606435600481810135601f81018490049093028401604052606083815261021e9482359460248035956044359594608494909392909101919081908382808284375094965050933593505060a435915050808203600355825160028054600082815292602060001961010060018516150201909216839004601f908101929092047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101926080908390106102b057805160ff19168380011785555b506102e09291505b8082111561032157848155600101610177565b600160a060020a03600435166000908152602081905260409020545b6060908152602090f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b604080519115158252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161024057829003601f168201915b505050505081565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b5050965050505050505060405180910390a15060015b9695505050505050565b8280016001018555821561016f579182015b8281111561016f5782518260005055916020019190600101906102c2565b505060035481901180156102f957506003546207a12090105b15610325576003805460028104600455600a9181029190910460059081559004600655610390565b5090565b6003546207a12090108015906103415750600354620f42409011155b15610369576003805460028104600455600a9181029190910460059081559004600655610390565b600354620f4240901115610390576003546005600282028190046004819055815590046006555b6005546004546006549084019091010183146103ab576102a6565b33600160a060020a0390811680835260016020908152604080852086905560048054858d1680885283882091909155600580548d8816808a52858a209190915560068054988e16808b52868b2099909955878a52958990528489208a90559254918852838820805490920190915554908652818620805490910190559054928452808420805490930190925590518290849082818181858883f15050600454604051600160a060020a038c16945090915082818181858883f15050600554604051600160a060020a038b16945090915082818181858883f15050600654604051600160a060020a038a16945090915082818181858883f150506003546004546005546006546040805160208101869052908101849052808c018390526080810182905260a08082526002805460018116156101000260001901168190049183018290527f24e86fefee4e56ec46d36facf3623eb2c3001f0c9602f50a39d0ce6a701a17fc99509750949550929391929091819060c0820190889080156102905780601f106102655761010080835404028352916020019161029056",
    address: "0xf5aa93571b40933475de508d62027d4fe7355d6f",
    generated_with: "2.0.9",
    contract_name: "MetaCoin"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MetaCoin = Contract;
  }

})();
