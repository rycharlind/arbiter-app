// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"policy","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"callMyEvent","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"receiver1","type":"address"},{"name":"receiver2","type":"address"},{"name":"receiver3","type":"address"},{"name":"policyNumber","type":"string"},{"name":"faceamount","type":"uint256"},{"name":"retentionAmount","type":"uint256"}],"name":"sendCoin","outputs":[{"name":"sufficient","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalanceInEth","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"policy","type":"string"},{"indexed":false,"name":"amount","type":"uint256"},{"indexed":false,"name":"amountreciever1","type":"uint256"},{"indexed":false,"name":"amountreceiver2","type":"uint256"},{"indexed":false,"name":"amountreceiver3","type":"uint256"}],"name":"myEvent","type":"event"}],
    binary: "6060604052600160a060020a0332166000908152602081905260409020620f42409055610529806100306000396000f3606060405260e060020a60003504630505c8c9811461004757806324fec94b146100a457806344b23477146101475780637bd703e81461020f578063f8b2cb4f1461023a575b005b60408051600180546020600282841615610100026000190190921691909104601f810182900482028401820190945283835261026d939083018282801561032c5780601f106103015761010080835404028352916020019161032c565b6100455b600280546003546004546005546040805160208101869052908101849052606081018390526080810182905260a08082526001805460001961010082841615020116979097049082018190527fe7da3758359fb0f98120eff046e4dc79df78958541c8f16e9585fa00f4b0ef8796959493929190819060c08201908890801561035f5780601f106103345761010080835404028352916020019161035f565b604080516020606435600481810135601f81018490048402850184019095528484526102db9481359460248035956044359560849492019190819084018382808284375094965050933593505060a43591505060008183036002600050819055508360016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061038157805160ff19168380011785555b506103b19291505b808211156103f257600081556001016101fb565b6102ef6004356000732e7a9e68bd8191a3e1db277ebc6e42c79755a4d06396e4ee3d6104e484610241565b6102ef6004355b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b604080519115158252519081900360200190f35b60408051918252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b505050505081565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050965050505050505060405180910390a1565b5060015b9695505050505050565b828001600101855582156101f3579182015b828111156101f3578251826000505591602001919060010190610393565b50506002546000901180156103cb57506002546207a12090105b156103f657600280549081046003908155600a908202046004556005908190049055610461565b5090565b6002546207a12090108015906104125750600254620f42409011155b1561043957600280549081046003908155600a908202046004556005908190049055610461565b600254620f424090111561046157600280546005918102829004600381905560045581900490555b60055460045460035484010101831461047c57506000610377565b3373ffffffffffffffffffffffffffffffffffffffff9081166000908152602081905260408082208590556003548a841683528183208054909101905560045489841683528183208054909101905560055492881682529020805490910190556103736100a8565b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f415610002575050604051519150610268905056",
    unlinked_binary: "6060604052600160a060020a0332166000908152602081905260409020620f42409055610529806100306000396000f3606060405260e060020a60003504630505c8c9811461004757806324fec94b146100a457806344b23477146101475780637bd703e81461020f578063f8b2cb4f1461023a575b005b60408051600180546020600282841615610100026000190190921691909104601f810182900482028401820190945283835261026d939083018282801561032c5780601f106103015761010080835404028352916020019161032c565b6100455b600280546003546004546005546040805160208101869052908101849052606081018390526080810182905260a08082526001805460001961010082841615020116979097049082018190527fe7da3758359fb0f98120eff046e4dc79df78958541c8f16e9585fa00f4b0ef8796959493929190819060c08201908890801561035f5780601f106103345761010080835404028352916020019161035f565b604080516020606435600481810135601f81018490048402850184019095528484526102db9481359460248035956044359560849492019190819084018382808284375094965050933593505060a43591505060008183036002600050819055508360016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061038157805160ff19168380011785555b506103b19291505b808211156103f257600081556001016101fb565b6102ef600435600073__ConvertLib____________________________6396e4ee3d6104e484610241565b6102ef6004355b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156102cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b604080519115158252519081900360200190f35b60408051918252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b505050505081565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050965050505050505060405180910390a1565b5060015b9695505050505050565b828001600101855582156101f3579182015b828111156101f3578251826000505591602001919060010190610393565b50506002546000901180156103cb57506002546207a12090105b156103f657600280549081046003908155600a908202046004556005908190049055610461565b5090565b6002546207a12090108015906104125750600254620f42409011155b1561043957600280549081046003908155600a908202046004556005908190049055610461565b600254620f424090111561046157600280546005918102829004600381905560045581900490555b60055460045460035484010101831461047c57506000610377565b3373ffffffffffffffffffffffffffffffffffffffff9081166000908152602081905260408082208590556003548a841683528183208054909101905560045489841683528183208054909101905560055492881682529020805490910190556103736100a8565b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f415610002575050604051519150610268905056",
    address: "0xc3030f465b1a0db86040df8568913a41fd321abb",
    generated_with: "2.0.9",
    contract_name: "MetaCoin"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MetaCoin error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MetaCoin = Contract;
  }

})();
